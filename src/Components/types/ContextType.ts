import { FilterType } from './FilterType';
import { ItemPerPage } from './ItemPerPage';
import { OldProduct } from './OldProducts';
import { OldProductType } from './OldProductType';
import { ProductType } from './phones';
import { Product } from './Product';

export type ContextType = {
  filter: FilterType;
  setFilter: (filter: FilterType) => void;
  phones: ProductType[];
  setPhones: (phones: ProductType[]) => void;
  tablets: ProductType[];
  setTablets: (tablets: ProductType[]) => void;
  accessories: ProductType[];
  setAccessories: (accessories: ProductType[]) => void;
  oldProducts: OldProduct[];
  setOldProducts: (hotPricesProducts: OldProduct[]) => void;
  products: Product[];
  setProducts: (products: Product[]) => void;
  oldProductOffers: OldProductType[];
  setOldProductOffers: (oldProductOffer: OldProductType[]) => void;
  query: string;
  setQuery: (query: string) => void;
  itemsPerPage: ItemPerPage;
  setItemsPerPage: (itemsPerPage: ItemPerPage) => void;
  slidePages: number;
  slideDots: number;
  setSlideDots: (slideDots: number) => void;
  setSlidePages: (slidePages: number) => void;
  pageNumber: number;
  setPageNumber: (pageNumber: number) => void;
  favouriteItems: Product[];
  setFavouriteItems: (favouriteItems: Product[]) => void;
  addedItems: Product[];
  setAddedItems: (addedItems: Product[]) => void;
  totalPrice: number;
  setTotalPrice: (totalPrice: number) => void;
  favouriteOldItems: OldProduct[];
  setFavouriteOldItems: (favouriteOldItems: OldProduct[]) => void;
  oldAddedItems: OldProduct[];
  setOldAddedItems: (oldAddedItems: OldProduct[]) => void;
  amountOfModels: number;
  setAmountOfModels: (amountOfModels: number) => void;
  totalModels: number;
  setTotalModels: (totalModels: number) => void;
  totalOldModels: number;
  setTotalOldModels: (totalOldModels: number) => void;
  totalOldProductsPrice: number;
  setTotalOldProductsPrice: (totalOldProductsPrice: number) => void;
  amountOfOldModels: number;
  setAmountOfOldModels: (amountOfOldModels: number) => void;
};
